@page "/editar-libro/{id:int}"
@using BlazorCrudBooks.Modelos
@using BlazorCrudBooks.Repositorio
@inject IRepositorio Repositorio
@inject NavigationManager navigationManager

<h3>Libreria</h3>

<div class="card">
    <div class="card-header">
        <div class="row">
            <h2 class="text-dark">Editar un libro</h2>
        </div>
    </div>
    <div class="card-body">
        <EditForm Model="modeloLibro" OnValidSubmit="@( () => ManejadorOnEditarLibro())">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="container">
                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Titulo: </label>
                        </div>
                        <div class="col-6">
                            <InputText @bind-Value="modeloLibro.Tituto" class="form-control" placeholder="Ingresa el título"></InputText>
                            <ValidationMessage For="() => modeloLibro.Tituto"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Descripción: </label>
                        </div>
                        <div class="col-6">
                            <InputText @bind-Value="modeloLibro.Descripcion" class="form-control" placeholder="Ingresa la descripción"></InputText>
                            <ValidationMessage For="() => modeloLibro.Descripcion"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Autor: </label>
                        </div>
                        <div class="col-6">
                            <InputText @bind-Value="modeloLibro.Autor" class="form-control" placeholder="Ingresa el autor"></InputText>
                            <ValidationMessage For="() => modeloLibro.Autor"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Paginas: </label>
                        </div>
                        <div class="col-6">
                            <InputNumber @bind-Value="modeloLibro.Paginas" class="form-control" placeholder="Ingresa el número de páginas"></InputNumber>
                            <ValidationMessage For="() => modeloLibro.Paginas"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <label>Precio: </label>
                        </div>
                        <div class="col-6">
                            <InputNumber @bind-Value="modeloLibro.Precio" class="form-control" placeholder="Ingresa el Precio"></InputNumber>
                            <ValidationMessage For="() => modeloLibro.Precio"></ValidationMessage>
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <button type="submit" class="btn btn-success"><span class="oi oi-cog" aria-hidden="true"></span> Actualizar Libro</button>
                        </div>
                        <div class="col-6">
                            <button class="btn btn-danger" @onclick="@( () => navigationManager.NavigateTo("/libros"))"><span class="oi oi-chevron-left" aria-hidden="true"></span> Volver atrás</button>
                        </div>
                    </div>
                </div>

            </div>
        </EditForm>

    </div>
</div>

@code {
    private Libro modeloLibro = new Libro();
    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        modeloLibro = await Repositorio.GetLibroId(Id.Value);
    }

    // Crear libro
    private async Task ManejadorOnEditarLibro()
    {
        var editarLibro = await Repositorio.ActualizarLibro(Id.Value, modeloLibro);
        navigationManager.NavigateTo("/libros");
    }
}

